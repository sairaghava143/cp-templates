<snippet>
	<content><![CDATA[
struct DSU {
	
	vector<vector<int>> component;
	vector<int> component_of;
	int component_control;
	int active_components;

	DSU() {}

	DSU(int N) {
			
		component_control = 0;
		active_components = 0;
		component_of.clear();
		component_of.resize(N);
		component.clear();
		component.resize(N);

		for(int i = 0; i < N; i++) {

			component_of[i] = i;
			component[i].push_back(i);
			active_components++;
		}
	}

	int component_size_of(int v) {

		return (int)component[component_of[v]].size();
	}

	int dsu(int x, int y) {

		if(component_of[x] == component_of[y]) {

			return 0;
		}

		active_components--;
		int sx = component[component_of[x]].size();
		int sy = component[component_of[y]].size();

		if(sx >= sy) {

			swap(x, y);
		}

		for(int node : component[component_of[x]]) {

			if(node != x) {

				component_of[node] = component_of[y];
				component[component_of[y]].push_back(node);
			}
		}

		component[component_of[y]].push_back(x);
		component[component_of[x]].clear();
		component_of[x] = component_of[y];

		return 1;
	}
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>dsu</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
	<description>Naman's Disjoin Set Union snippet!</description>>
</snippet>
